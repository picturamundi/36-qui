#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    release-after-ms = <350>;
    quick-release;
    /delete-property/ ignore-modifiers;
};
&lt {
    quick-tap-ms = <200>;
};
&mmv {
    time-to-max-speed-ms = <1000>;
    acceleration-exponent=<1>;
};
&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<1>;

};

/ {
    macros {
        h_t: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD-TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        mr_t: mod-right_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT-MOD-TAP";
            #binding-cells = <2>;
            flavor = "balanced"; // nested keypresses trigger hold
            tapping-term-ms = <200>; // key-positions matter within the tapping term
            quick_tap_ms = <100>;
            global-quick-tap; // hold will not trigger within quickt_tap ms of previous key press
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release; //allows using multiple mods on one hand
            hold-trigger-key-positions = // works with left hand only
                <0 1 2 3 4 
                10 11 12 13 14 
                20 21 22 23 24>;
        };
        ml_t: mod-left_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT-MOD-TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick_tap_ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
            hold-trigger-key-positions =
                <5 6 7 8 9 
                15 16 17 18 19 
                25 26 27 28 29>;
        };
        sr_t: shift-right_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT-TAP-RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            flavor = "balanced";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions =
                <0 1 2 3 4 
                10 11 12 13 14 
                20 21 22 23 24>;
        };
        sl_t: shift-left_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT-TAP-LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            flavor = "balanced";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions =
                <5 6 7 8 9 
                15 16 17 18 19 
                25 26 27 28 29>;
        };
        l_st: layer_shift-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER-STICKY-TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&mo>, <&sk>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        alpha-en {
            bindings = <
                // ╭───────────────┬───────────────────┬───────────────┬───────────────┬───────────────────╮       ╭───────────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &h_t LG(N1) SQT &h_t LG(N2) COMMA   &h_t LG(N3) DOT &h_t LG(N4) P   &h_t LG(N5) Y               &h_t LG(N6) F   &h_t LG(N7) G    &h_t LG(N8) C  &h_t LG(N9) R   &h_t LG(N0) L  
                // ├───────────────┼───────────────────┼───────────────┼───────────────┼───────────────────┤       ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &sl_t LSHFT A   &ml_t LCTRL O       &ml_t LALT E    &ml_t LGUI U    &h_t LC(LA(LG(V))) I        &h_t LG(SPACE) D &mr_t RGUI H   &mr_t RALT T    &mr_t RCTRL N   &sr_t RSHFT S  
                // ├───────────────┼───────────────────┼───────────────┼───────────────┼───────────────────┤       ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &h_t EXCL SEMI  &h_t QMARK Q        &h_t LPAR J     &h_t RPAR K     &h_t ESC X                  &h_t CAPS B     &h_t MINUS M    &h_t LBKT W     &h_t LBRC V     &h_t FSLH Z    
                // ╰───────────────┼───────────────────┼───────────────┼───────────────┼───────────────────┤       ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                        &lt 6 GRAVE     &lt 3 BSPC      &l_st 1 LSHFT               &lt 2 SPACE     &lt 4 RET       &lt 5 TAB                                      
                //                                     ╰───────────────┴───────────────┴───────────────────╯       ╰───────────────┴───────────────┴───────────────╯                               
            >;
        };
        
        nav-num {
            bindings = <
                // ╭───────────────────┬───────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &kp LA(UP)          &kp LA(LEFT)    &kp UP          &kp LA(RIGHT)   &trans          &kp COMMA       &kp N7          &kp N8          &kp N9          &kp N0         
                // ├───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &sl_t LSHFT LG(TAB) &ml_t LCTRL LEFT &ml_t LALT DOWN &ml_t LGUI RIGHT &kp TAB       &kp DOT         &mr_t RGUI N4   &mr_t RALT N5   &mr_t RCTRL N6  &trans         
                // ├───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &trans              &kp LG(LBKT)    &trans          &kp LG(RBKT)    &kp ESC         &kp LS(N8)      &kp N1          &kp N2          &kp N3          &trans         
                // ╰───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                        &trans          &trans          &trans          &kp SPACE       &kp RET         &kp BSPC                                       
                //                                     ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────┴───────────────╯                               
            >;
        };
        
        nav-media {
            bindings = <
                // ╭───────────────────┬───────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────────┬───────────────────┬───────────────────┬────────────────────╮
                    &kp LA(UP)          &kp LA(LEFT)    &kp UP          &kp LA(RIGHT)   &trans          &kp INS         &kp C_PREV          &kp C_PP            &kp C_NEXT          &kp DEL              
                // ├───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────┤
                    &sl_t LSHFT LG(TAB) &ml_t LCTRL LEFT &ml_t LALT DOWN &ml_t LGUI RIGHT &kp TAB       &kp HOME        &mr_t RGUI C_VOL_DN &mr_t RALT C_MUTE   &mr_t RCTRL C_VOL_UP &sr_t RSHFT  END    
                // ├───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────┤
                    &trans              &kp LG(LBKT)    &trans          &kp LG(RBKT)    &kp ESC         &kp PG_UP       &kp C_BRI_DN        &trans              &kp C_BRI_UP        &kp PG_DN            
                // ╰───────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────╯
                                                        &kp BSPC        &kp RET         &kp SPACE       &trans          &trans              &trans                                                       
                //                                     ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────────┴───────────────────╯                                         
            >;
        };
        
        command-symbol {
            bindings = < 
                // ╭───────────────────┬───────────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────────┬────────────────────╮
                    &kp LG(Q)           &kp LG(W)           &kp LG(E)       &kp LG(R)       &kp LG(O)       &kp LPAR        &kp AMPS        &kp STAR        &kp GRAVE           &kp RPAR             
                // ├───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────┤
                    &sl_t LSHFT LG(A)   &ml_t LCTRL LG(S)   &ml_t LALT LG(D) &ml_t LGUI LG(F) &kp LG(N)     &kp LBKT        &mr_t RGUI DLLR &mr_t RALT PRCNT &mr_t RCTRL CARET  &sr_t RSHFT RBKT     
                // ├───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────┤
                    &kp LG(Z)           &kp LG(X)           &kp LG(C)       &kp LG(V)       &kp LG(M)       &kp LBRC        &kp EXCL        &kp AT          &kp HASH            &kp RBRC             
                // ╰───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────╯
                                                            &trans          &trans          &trans          &kp SPACE       &kp RET         &kp BSPC                                                 
                //                                         ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────┴───────────────╯                                         
            >;
        };
        
        symbol-fuction {
            bindings = <
                // ╭───────────────────┬───────────────────────┬───────────────────┬───────────────────────┬────────────────╮      ╭───────────────┬───────────────┬───────────────┬───────────────┬─────────────────╮
                    &kp LT              &kp PIPE                &kp BSLH            &kp FSLH                &kp GT                  &kp PSCRN       &kp F7          &kp F8          &kp F9          &kp F10           
                // ├───────────────────┼───────────────────────┼───────────────────┼───────────────────────┼────────────────┤      ├───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                    &sl_t LSHFT LA(BSLH) &ml_t LCTRL LA(LS(BSLH)) &ml_t LALT LA(LBKT)  &ml_t LGUI LA(LS(LBKT))  &kp LA(LS(RBKT))        &kp SLCK        &mr_t RGUI F4    &mr_t RALT F5    &mr_t RCTRL F6   &sr_t  RSHFT F11   
                // ├───────────────────┼───────────────────────┼───────────────────┼───────────────────────┼────────────────┤      ├───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                    &kp LA(LS(MINUS))   &kp LA(MINUS)           &kp MINUS           &kp EQUAL               &kp PLUS                &kp PAUSE_BREAK &kp F1          &kp F2          &kp F3          &kp F12           
                // ╰───────────────────┼───────────────────────┼───────────────────┼───────────────────────┼────────────────┤      ╰───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                                                                &kp BSPC            &kp RET                 &kp SPACE               &trans          &trans          &trans                                            
                //                                             ╰───────────────────┴───────────────────────┴────────────────╯      ╰───────────────┴───────────────┴───────────────╯                                  
            >;
        };
        
        controller-modes {
            bindings = <
                // ╭───────────┬───────────────┬───────────────┬───────────────┬─────────────╮     ╭───────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &bootloader &trans          &trans          &sys_reset      &trans              &trans      &sys_reset          &trans          &trans          &bootloader
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1    &bt BT_SEL 0    &bt BT_CLR          &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3   
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &trans      &trans          &trans          &trans          &trans              &trans      &out OUT_TOG    &trans          &trans          &trans         
                // ╰───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                &trans          &trans          &trans              &trans          &trans          &trans                                     
                //                             ╰───────────────┴───────────────┴─────────────╯     ╰───────────┴───────────────┴───────────────╯                               
            >;
        };

        // not in use
        blank {
            bindings = <
                // ╭───────────┬───────────┬───────────┬───────────┬─────────────╮     ╭───────────┬───────────┬───────────┬───────────┬──────────────╮
                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans         
                // ├───────────┬───────────┬───────────┬───────────┬─────────────┤     ├───────────┬───────────┬───────────┬───────────┬──────────────┤
                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans         
                // ├───────────┬───────────┬───────────┬───────────┬─────────────┤     ├───────────┬───────────┬───────────┬───────────┬──────────────┤
                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans         
                // ╰───────────┴───────────┬───────────┬───────────┬─────────────┤     ├───────────┬───────────┬───────────┴───────────┴──────────────╯
                                            &trans      &trans      &trans              &trans      &trans      &trans                                 
                //                         ╰───────────┴─────── ───┴─────────────╯     ╰───────────┴───────────┴───────────╯                           
            >;
        };
    };
};