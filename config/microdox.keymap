#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// add mods to L4L n
// swap L5 and L6
// rethink symbol layers; put question mark and other common symbols on right hand layer
// play around with the mouse keys and scroll keys

#define MOUSE   6

&sk {
    release-after-ms = <350>;
    quick-release;
    /delete-property/ ignore-modifiers;
};
&lt {
    quick-tap-ms = <200>;
};
&mmv {
    time-to-max-speed-ms = <1000>;
    acceleration-exponent=<1>;
};
&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<1>;

};

/ {
    macros {
        ht: hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD-TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        rmt: right-mod-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT-MOD-TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
        lmt: left-mod-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT-MOD-TAP";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };
        stl: shift-tap-left {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT-TAP-LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            flavor = "balanced";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };
        str: shift-tap-right {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT-TAP-RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <100>;
            flavor = "balanced";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
        lst: layer-shift-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER-STICKY-TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred"; 
            bindings = <&mo>, <&sk>;
        };
        lc: lst_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "B_CAPSLOCK";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =  
                <&lst 1 LSHFT>, 
                <&lmt CAPS B>;
        };
        mouse_l: mouse_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_LEFT";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_HOR(-4000)>, <&mmv MOVE_HOR(-2000)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mouse_r: mouse_right {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_RIGHT";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_HOR(4000)>, <&mmv MOVE_HOR(2000)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mouse_u: mouse_up {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_UP";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_VERT(-4000)>, <&mmv MOVE_VERT(-2000)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mouse_d: mouse_down {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_DOWN";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_VERT(4000)>, <&mmv MOVE_VERT(2000)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        alpha {
            bindings = <
                // ╭───────────────┬──────────────────┬────────────────┬──────────────┬──────────────╮     ╭──────────────┬──────────────┬────────────────┬───────────────┬──────────────╮
                    &ht LG(N1) SQT  &ht LG(N2) COMMA    &ht LG(N3) DOT  &ht LG(N4) P    &ht LG(N5) Y        &ht LG(N6) F   &ht LG(N7) G   &ht LG(N8) C     &ht LG(N9) R    &ht LG(N0) L   
                // ├───────────────┼──────────────────┼────────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼────────────────┼───────────────┼──────────────┤
                    &stl LSHFT A    &lmt LCTRL O        &lmt LALT E     &lmt LGUI U     &ht LG(TAB) I       &ht LC(LA(LG(V))) D   &rmt RGUI H    &rmt RALT T      &rmt RCTRL N    &str RSHFT S   
                // ├───────────────┼──────────────────┼────────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼────────────────┼───────────────┼──────────────┤
                    &ht EXCL SEMI   &ht QMARK Q         &ht LPAR J      &ht RPAR K      &ht ESC X           &ht CAPS B     &ht MINUS M    &ht LBKT W       &ht LBRC V      &ht FSLH Z     
                // ╰───────────────┼──────────────────┼────────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼────────────────┼───────────────┼──────────────╯
                                                        &lt 6 CARET     &lt 3 BSPC      &lst 1 LSHFT        &lt 2 SPACE    &lt 4 TAB      &lt 5 GRAVE      
                //                                    ╰────────────────┴──────────────┴──────────────╯     ╰──────────────┴──────────────┴────────────────╯
            >;
        };
        
        nav-num {
            bindings = <
                // ╭───────────────────────────┬───────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &kp INS                     &kp LA(LEFT)    &kp UP          &kp LA(RIGHT)   &kp DEL         &kp COMMA       &kp N7          &kp N8          &kp N9          &kp N0         
                // ├───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &stl LSHFT HOME             &lmt LCTRL LEFT &lmt LALT DOWN  &lmt LGUI RIGHT &kp END         &kp DOT         &rmt RGUI N4    &rmt RALT N5    &rmt RCTRL N6   &str RSHFT RET
                // ├───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &kp PG_UP                   &kp LG(LBKT)    &trans          &kp LG(RBKT)    &kp PG_DN       &kp LS(N8)      &kp N1          &kp N2          &kp N3          &trans         
                // ╰───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                                &trans          &trans          &trans          &kp SPACE       &kp N0          &trans                                         
                //                                             ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────┴───────────────╯                               
            >;
        };
        
        nav-media {
            bindings = <
                // ╭───────────────────────────┬───────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────────┬───────────────────┬───────────────────┬────────────────────╮
                    &kp INS                     &kp LA(LEFT)    &kp UP          &kp LA(RIGHT)   &kp DEL         &kp C_RW        &kp C_PP            &kp C_FF            &kp C_PREV          &kp C_NEXT          
                // ├───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────┤
                    &stl LSHFT HOME             &lmt LCTRL LEFT &lmt LALT DOWN  &lmt LGUI RIGHT &kp END         &kp C_MUTE      &rmt RGUI C_VOL_DN  &rmt RALT C_VOL_UP  &rmt RCTRL C_BRI_DN &str RSHFT C_BRI_UP  
                // ├───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────┤
                    &kp PG_UP                   &kp LG(LBKT)    &trans          &kp LG(RBKT)    &kp PG_DN       &trans          &trans              &trans              &trans              &trans               
                // ╰───────────────────────────┼───────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────────┼───────────────────┼───────────────────┼────────────────────╯
                                                                &trans          &trans          &trans          &trans          &trans              &trans                                                       
                //                                             ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────────┴───────────────────╯                                         
            >;
        };
        
        command-symbol {
            bindings = < 
                // ╭───────────────────┬───────────────────┬───────────────┬───────────────┬─────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────────┬────────────────────╮
                    &kp LG(Q)           &kp LG(W)           &kp LG(E)       &kp LG(R)       &kp LG(O)       &kp LPAR       &kp AMPS        &kp STAR        &kp GRAVE            &kp RPAR             
                // ├───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────┤
                    &stl LSHFT LG(A)    &lmt LCTRL LG(S)    &lmt LALT LG(D) &lmt LGUI LG(F) &kp LG(N)       &kp LBRC        &rmt RGUI DLLR  &rmt RALT PRCNT &rmt RCTRL CARET    &str RSHFT RBRC      
                // ├───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────┤
                    &kp LG(Z)           &kp LG(X)           &kp LG(C)       &kp LG(V)       &kp LG(M)       &kp LBKT        &kp EXCL        &kp AT          &kp HASH            &kp RBKT             
                // ╰───────────────────┼───────────────────┼───────────────┼───────────────┼─────────┤     ├───────────────┼───────────────┼───────────────┼───────────────────┼────────────────────╯
                                                            &trans          &trans          &trans          &trans          &trans          &trans                                                   
                //                                         ╰───────────────┴───────────────┴─────────╯     ╰───────────────┴───────────────┴───────────────╯                                         
            >;
        };
        
        symbol-fuction {
            bindings = <
                // ╭───────────────────┬───────────────────┬───────────────┬───────────────────┬─────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬─────────────────╮
                    &kp LT              &kp PIPE            &kp BSLH        &kp FSLH            &kp GT              &kp PSCRN       &kp F7          &kp F8          &kp F9          &kp F10           
                // ├───────────────────┼───────────────────┼───────────────┼───────────────────┼─────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                    &stl LSHFT LA(LBKT) &kp LA(LS(LBKT))    &kp LA(BSLH)    &kp LA(LS(BSLH))    &kp LA(LS(N2))      &kp SLCK        &rmt RGUI F4    &rmt RALT F5    &rmt RCTRL F6   &str  RSHFT F11   
                // ├───────────────────┼───────────────────┼───────────────┼───────────────────┼─────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                    &kp LA(LS(MINUS))   &kp LA(MINUS)       &kp MINUS       &kp PLUS            &kp EQUAL           &kp PAUSE_BREAK &kp F1          &kp F2          &kp F3          &kp F12           
                // ╰───────────────────┼───────────────────┼───────────────┼───────────────────┼─────────────┤     ╰───────────────┼───────────────┼───────────────┼───────────────┼─────────────────┤
                                                            &trans          &trans              &trans              &trans          &trans          &trans                                            
                //                                         ╰───────────────┴───────────────────┴─────────────╯     ╰───────────────┴───────────────┴───────────────╯                                  
            >;
        };
        
        controller {
            bindings = <
                // ╭───────────┬───────────────┬───────────────┬───────────────┬─────────────╮     ╭───────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &trans      &trans          &bootloader     &reset          &trans              &trans      &reset          &bootloader     &ext_power EXT_POWER_OFF_CMD          &ext_power EXT_POWER_ON_CMD
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &bt BT_CLR  &bt BT_SEL 2    &bt BT_SEL 1    &bt BT_SEL 0    &trans              &trans      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR     
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &trans      &trans          &trans          &trans          &trans              &trans      &out OUT_TOG          &trans          &trans          &trans   
                // ╰───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                &trans          &trans          &trans              &trans      &trans          &trans                                         
                //                             ╰───────────────┴───────────────┴─────────────╯     ╰───────────┴───────────────┴───────────────╯                               
            >;
        };

        mouse {
            bindings = <
                // ╭───────────┬───────────────┬───────────────┬───────────────┬─────────────╮     ╭───────────┬───────────────┬───────────────┬───────────────┬──────────────╮
                    &trans      &trans          &trans          &trans          &trans              &trans      &mwh SCROLL_VERT(-40)          &mouse_u        &trans          &trans        
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &kp LSHFT   &kp LCTRL       &kp LALT        &kp LGUI        &trans              &mkp LCLK   &mouse_l        &mouse_d        &mouse_r        &mkp RCLK      
                // ├───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────┤
                    &trans      &trans          &trans          &trans          &trans              &trans      &mwh SCROLL_VERT(40)          &trans          &trans          &trans        
                // ╰───────────┼───────────────┼───────────────┼───────────────┼─────────────┤     ├───────────┼───────────────┼───────────────┼───────────────┼──────────────╯
                                                &trans          &trans          &trans              &mkp LCLK      &trans          &trans                                         
                //                             ╰───────────────┴───────────────┴─────────────╯     ╰───────────┴───────────────┴───────────────╯                               
            >;
        };
    };
};