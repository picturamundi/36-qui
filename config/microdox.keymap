/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <200>;
};

&sk {
    release-after-ms = <1500>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        ghr: generic_hold_right {
            compatible = "zmk,behavior-hold-tap";
            label = "GENERIC_HOLD_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <120>;
            quick_tap_ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = 
                <0>, <1>, <2>, <3>, <4>,
                <10>, <11>, <12>, <13>, <14>,
                <20>, <21>, <22>, <23>, <24>;
        };

        ghl: generic_hold_left {
            compatible = "zmk,behavior-hold-tap";
            label = "GENERIC_HOLD_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick_tap_ms = <150>;
            flavor = "balanced";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = 
                <5>, <6>, <7>, <8>, <9>,
                <15>, <16>, <17>, <18>, <19>,
                <25>, <26>, <27>, <28>, <29>
                ;
        };

    };

    macros {

        alf: alf {
            label = "alf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
                ;
        };

        lst: layer_sticky_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STICKY_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <50>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&sk>;
        };

        ght: generic_hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GENERIC_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <110>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
// 0-------------------------------------------------------------------------
// |  '  |  ,  |  .  |  p  |  y   |          |  f  |  g   |  c  |  r  |  l  |
// |  a  |  o  |  e  |  u  |  i   |          |  d  |  h   |  t  |  n  |  s  |
// |  ;  |  q  |  j  |  k  |  x   |          |  b  |  m   |  w  |  v  |  z  |
//             | ZMK | BSP | SHFT |          | SPC | TAB  | ZMK |
// 0-------------------------------------------------------------------------
// |  '  |  ,  |  .  |  p  |  y   |          |  f  |  g   |  c  |  r  |  l  |
// |  a  |  o  |  e  |  u  |  i   |          |  d  |  h   |  t  |  n  |  s  |
// |  !  |  ?  |  (  |  )  | ESC  |          |SWTCH|  -   |     |     |     |
//             | GUI | NAV | SHFT |          | SPC | SYM  | ALT |

                        bindings = <
   &ght LG(N1) SQT  &ght LG(N2) COMMA   &ght LG(N3) DOT &ght LG(N4) P   &ght LG(N5) Y   &ght LG(N6) F          &ght LG(N7) G  &ght LG(N8) C   &ght LG(N9) R   &ght LG(N0) L
   &ghl LSHFT A     &ghl LCTRL O        &ghl LALT E     &ghl LGUI U     &ght RA(UP) I   &ght LG(TAB) D         &ghr RGUI H    &ghr RALT T     &ghr RCTRL N    &ghr RSHFT S
   &ght EXCL SEMI   &ght QMARK Q        &ght LPAR J     &ght RPAR K     &ght ESC X      &ght LC(LA(LG(V))) B   &ght MINUS M   &kp W           &kp V           &kp Z
   &mo 2            &kp BSPC            &lst 1 LSHFT                                                           &ght 2 SPACE    &kp TAB         &mo 2
                        >;
                };

                nav_layer {
// 1-----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |          | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |          |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |          |  \  | ENT  |      |     |      |
//             |     |      |     |          |     |      |      |
                        bindings = <
   &trans   &kp RA(LEFT)        &kp UP          &kp RA(RIGHT)   &trans        &kp LS(LC(LA(LG(Y))))   &kp LS(LC(LA(LG(U))))        &kp  LS(LC(LA(LG(I))))                   &kp LS(LC(LA(LG(O))))   &kp LS(LC(LA(LG(SEMI))))
   &trans   &kp LEFT            &kp DOWN        &kp RIGHT       &mo 3         &kp LS(LC(LA(LG(H))))   &kp LS(LC(LA(LG(J))))        &ght LS(LC(LA(LG(C)))) LS(LC(LA(LG(K)))) &kp LS(LC(LA(LG(L))))   &kp RET
   &trans   &trans              &trans          &trans          &trans        &kp LS(LC(LA(LG(N))))   &kp LS(LC(LA(LG(M))))        &kp  LC(LA(LG(COMMA)))                   &kp LC(LA(LG(DOT)))     &trans
                                &trans          &trans          &trans        &alf                    &trans                       &trans
                        >;
                };

                sym_layer {
// 2-----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |          |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |          |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |          |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |          | ENT |     | ALT |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &bt BT_CLR    &trans    &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &bt BT_CLR
   &reset    &bootloader    &trans    &trans    &trans      &trans    &trans    &trans          &bootloader   &reset
                       &kp LGUI  &trans    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// 3-----------------------------------------------------------------------------------------
// |     |     |     |     |     |          |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |          |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |          |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |          |  0  |  .  |     |
                        bindings = <
   &trans &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D
   &trans &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E
   &trans &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F
                 &trans &trans &trans    &kp N0 &kp DOT &trans
                        >;
                };
        };
};
